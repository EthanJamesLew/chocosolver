defaultScope(3);
intRange(-8, 7);

c1_Person = Abstract("c1_Person");
c2_age = c1_Person.addChild("c2_age").withCard(1, 1);
c6_maritalStatus = c1_Person.addChild("c6_maritalStatus").withCard(1, 1).withGroupCard(1, 1);
c7_neverMarried = c6_maritalStatus.addChild("c7_neverMarried").withCard(0, 1);
c8_married = c6_maritalStatus.addChild("c8_married").withCard(0, 1);
c9_spouse = c8_married.addChild("c9_spouse").withCard(1, 1);
c31_divorced = c6_maritalStatus.addChild("c31_divorced").withCard(0, 1);
c41_childs = c1_Person.addChild("c41_childs");
c66_parents = c1_Person.addChild("c66_parents").withCard(0, 2);
c81_Alice = Clafer("c81_Alice").withCard(1, 1).extending(c1_Person);
c88_Bob = Clafer("c88_Bob").withCard(1, 1).extending(c1_Person);
c89_Carol = Clafer("c89_Carol").withCard(1, 1).extending(c1_Person);
c2_age.refTo(Int);
c9_spouse.refToUnique(c1_Person);
c41_childs.refToUnique(c1_Person);
c66_parents.refToUnique(c1_Person);
c2_age.addConstraint(greaterThanEqual(joinRef($this()), constant(0)));
c6_maritalStatus.addConstraint(implies(or(some(join($this(), c8_married)), some(join($this(), c31_divorced))), greaterThanEqual(joinRef(join(joinParent($this()), c2_age)), constant(5))));
c8_married.addConstraint(notEqual(joinRef(join($this(), c9_spouse)), joinParent(joinParent($this()))));
c9_spouse.addConstraint(equal(joinRef(join(join(join(joinRef($this()), c6_maritalStatus), c8_married), c9_spouse)), joinParent(joinParent(joinParent($this())))));
c41_childs.addConstraint($in(joinParent($this()), joinRef(join(joinRef($this()), c66_parents))));
c41_childs.addConstraint($in(joinRef(join(join(join(joinParent($this()), c6_maritalStatus), c8_married), c9_spouse)), joinRef(join(joinRef($this()), c66_parents))));
c41_childs.addConstraint(lessThan(joinRef(join(joinRef($this()), c2_age)), joinRef(join(joinParent($this()), c2_age))));
c66_parents.addConstraint($in(joinParent($this()), joinRef(join(joinRef($this()), c41_childs))));
c81_Alice.addConstraint(equal(joinRef(join($this(), c2_age)), constant(6)));
c81_Alice.addConstraint(equal(joinRef(join(join(join($this(), c6_maritalStatus), c8_married), c9_spouse)), global(c88_Bob)));
c89_Carol.addConstraint(equal(joinRef(join($this(), c2_age)), constant(1)));
