scope({c0_DFConnector:8, c0_DesignFunction:6, c0_HWConnector:15, c0_HWNode:6, c0_HWRoute:9, c0_MinFDSubgraph:8, c0_SingleHWNodeOrRoute:8, c0_connectors:64, c0_deployedTo:6, c0_end:8, c0_ends:30, c0_functions:48, c0_headEdge:9, c0_headEdgeEnd:9, c0_innerNodes:54, c0_nodes:48, c0_path:8, c0_source:8, c0_start:8, c0_target:8, c1_deployedTo:8, c1_end:9, c1_start:9});
defaultScope(1);
intRange(-8, 7);
stringLength(16);

c0_DesignFunction = Abstract("c0_DesignFunction");
c0_deployedTo = c0_DesignFunction.addChild("c0_deployedTo").withCard(1, 1);
c0_DFConnector = Abstract("c0_DFConnector");
c0_source = c0_DFConnector.addChild("c0_source").withCard(1, 1);
c0_target = c0_DFConnector.addChild("c0_target").withCard(1, 1);
c1_deployedTo = c0_DFConnector.addChild("c1_deployedTo").withCard(1, 1);
c0_MinFDSubgraph = Abstract("c0_MinFDSubgraph");
c0_functions = c0_MinFDSubgraph.addChild("c0_functions");
c0_connectors = c0_MinFDSubgraph.addChild("c0_connectors");
c0_HWNode = Abstract("c0_HWNode");
c0_HWConnector = Abstract("c0_HWConnector");
c0_ends = c0_HWConnector.addChild("c0_ends").withCard(2, 2);
c0_SingleHWNodeOrRoute = Abstract("c0_SingleHWNodeOrRoute");
c0_start = c0_SingleHWNodeOrRoute.addChild("c0_start").withCard(1, 1);
c0_end = c0_SingleHWNodeOrRoute.addChild("c0_end").withCard(1, 1);
c0_path = c0_SingleHWNodeOrRoute.addChild("c0_path").withCard(0, 1);
c0_nodes = c0_SingleHWNodeOrRoute.addChild("c0_nodes");
c0_HWRoute = Abstract("c0_HWRoute");
c1_start = c0_HWRoute.addChild("c1_start").withCard(1, 1);
c1_end = c0_HWRoute.addChild("c1_end").withCard(1, 1);
c0_headEdge = c0_HWRoute.addChild("c0_headEdge").withCard(1, 1);
c0_headEdgeEnd = c0_HWRoute.addChild("c0_headEdgeEnd").withCard(1, 1);
c0_tailPath = c0_HWRoute.addChild("c0_tailPath").withCard(0, 1);
c0_innerNodes = c0_HWRoute.addChild("c0_innerNodes");
c0_m1 = Clafer("c0_m1").withCard(1, 1);
c0_m2 = Clafer("c0_m2").withCard(1, 1);
c0_FC_DF = Clafer("c0_FC_DF").withCard(1, 1);
c0_FL_DF = Clafer("c0_FL_DF").withCard(1, 1);
c0_RC_DF = Clafer("c0_RC_DF").withCard(1, 1);
c0_RL_DF = Clafer("c0_RL_DF").withCard(1, 1);
c0_F1 = Clafer("c0_F1").withCard(1, 1);
c0_F2 = Clafer("c0_F2").withCard(1, 1);
c0_FCtoF1 = Clafer("c0_FCtoF1").withCard(1, 1);
c0_FLtoF1 = Clafer("c0_FLtoF1").withCard(1, 1);
c0_RCtoF1 = Clafer("c0_RCtoF1").withCard(1, 1);
c0_RLtoF1 = Clafer("c0_RLtoF1").withCard(1, 1);
c0_FCtoF2 = Clafer("c0_FCtoF2").withCard(1, 1);
c0_FLtoF2 = Clafer("c0_FLtoF2").withCard(1, 1);
c0_RCtoF2 = Clafer("c0_RCtoF2").withCard(1, 1);
c0_RLtoF2 = Clafer("c0_RLtoF2").withCard(1, 1);
c0_FC_F1_RC = Clafer("c0_FC_F1_RC").withCard(1, 1);
c0_FC_F1_RL = Clafer("c0_FC_F1_RL").withCard(1, 1);
c0_FC_F2_RC = Clafer("c0_FC_F2_RC").withCard(1, 1);
c0_FC_F2_RL = Clafer("c0_FC_F2_RL").withCard(1, 1);
c0_FL_F1_RC = Clafer("c0_FL_F1_RC").withCard(1, 1);
c0_FL_F1_RL = Clafer("c0_FL_F1_RL").withCard(1, 1);
c0_FL_F2_RC = Clafer("c0_FL_F2_RC").withCard(1, 1);
c0_FL_F2_RL = Clafer("c0_FL_F2_RL").withCard(1, 1);
c0_FC = Clafer("c0_FC").withCard(1, 1);
c0_FL = Clafer("c0_FL").withCard(1, 1);
c0_RC = Clafer("c0_RC").withCard(1, 1);
c0_RL = Clafer("c0_RL").withCard(1, 1);
c0_ECU1 = Clafer("c0_ECU1").withCard(1, 1);
c0_ECU2 = Clafer("c0_ECU2").withCard(1, 1);
c0_FCtoFL = Clafer("c0_FCtoFL").withCard(0, 1);
c0_FCtoRC = Clafer("c0_FCtoRC").withCard(0, 1);
c0_FCtoRL = Clafer("c0_FCtoRL").withCard(0, 1);
c0_FCtoECU1 = Clafer("c0_FCtoECU1").withCard(0, 1);
c0_FCtoECU2 = Clafer("c0_FCtoECU2").withCard(0, 1);
c0_FLtoRC = Clafer("c0_FLtoRC").withCard(0, 1);
c0_FLtoRL = Clafer("c0_FLtoRL").withCard(0, 1);
c0_FLtoECU1 = Clafer("c0_FLtoECU1").withCard(0, 1);
c0_FLtoECU2 = Clafer("c0_FLtoECU2").withCard(0, 1);
c0_RCtoRL = Clafer("c0_RCtoRL").withCard(0, 1);
c0_RCtoECU1 = Clafer("c0_RCtoECU1").withCard(0, 1);
c0_RCtoECU2 = Clafer("c0_RCtoECU2").withCard(0, 1);
c0_RLtoECU1 = Clafer("c0_RLtoECU1").withCard(0, 1);
c0_RLtoECU2 = Clafer("c0_RLtoECU2").withCard(0, 1);
c0_ECU1toECU2 = Clafer("c0_ECU1toECU2").withCard(0, 1);
c0_deployedTo.refTo(c0_HWNode);
c0_source.refTo(c0_DesignFunction);
c0_target.refTo(c0_DesignFunction);
c1_deployedTo.extending(c0_SingleHWNodeOrRoute);
c0_DFConnector.addConstraint(and(equal(joinRef(join(join($this(), c1_deployedTo), c0_start)), joinRef(join(joinRef(join($this(), c0_source)), c0_deployedTo))), equal(joinRef(join(join($this(), c1_deployedTo), c0_end)), joinRef(join(joinRef(join($this(), c0_target)), c0_deployedTo)))));
c0_functions.refToUnique(c0_DesignFunction);
c0_connectors.refToUnique(c0_DFConnector);
c0_ends.refToUnique(c0_HWNode);
c0_start.refTo(c0_HWNode);
c0_end.refTo(c0_HWNode);
c0_path.extending(c0_HWRoute);
c0_path.addConstraint(and(equal(joinRef(join(joinParent($this()), c0_start)), joinRef(join($this(), c1_start))), equal(joinRef(join(joinParent($this()), c0_end)), joinRef(join($this(), c1_end)))));
c0_SingleHWNodeOrRoute.addConstraint(ifOnlyIf(notEqual(joinRef(join($this(), c0_start)), joinRef(join($this(), c0_end))), some(join($this(), c0_path))));
c0_nodes.refToUnique(c0_HWNode);
c0_SingleHWNodeOrRoute.addConstraint(equal(joinRef(join($this(), c0_nodes)), union(union(joinRef(join($this(), c0_start)), joinRef(join($this(), c0_end))), joinRef(join(join($this(), c0_path), c0_innerNodes)))));
c1_start.refTo(c0_HWNode);
c1_end.refTo(c0_HWNode);
c0_headEdge.refTo(c0_HWConnector);
c0_HWRoute.addConstraint($in(joinRef(join($this(), c1_start)), joinRef(join(joinRef(join($this(), c0_headEdge)), c0_ends))));
c0_headEdgeEnd.refTo(c0_HWNode);
c0_HWRoute.addConstraint(equal(joinRef(join($this(), c0_headEdgeEnd)), diff(joinRef(join(joinRef(join($this(), c0_headEdge)), c0_ends)), joinRef(join($this(), c1_start)))));
c0_tailPath.extending(c0_HWRoute);
c0_tailPath.addConstraint(and(equal(joinRef(join(joinParent($this()), c0_headEdgeEnd)), joinRef(join($this(), c1_start))), equal(joinRef(join(joinParent($this()), c1_end)), joinRef(join($this(), c1_end)))));
c0_HWRoute.addConstraint(ifOnlyIf($in(joinRef(join($this(), c1_end)), joinRef(join(joinRef(join($this(), c0_headEdge)), c0_ends))), none(join($this(), c0_tailPath))));
c0_innerNodes.refToUnique(c0_HWNode);
c0_HWRoute.addConstraint(ifThenElse(some(join($this(), c0_tailPath)), equal(joinRef(join($this(), c0_innerNodes)), union(joinRef(join($this(), c0_headEdgeEnd)), joinRef(join(join($this(), c0_tailPath), c0_innerNodes)))), none(join($this(), c0_innerNodes))));
c0_HWRoute.addConstraint(notIn(joinRef(join($this(), c1_start)), joinRef(join(join($this(), c0_tailPath), c0_innerNodes))));
c0_m1.refTo(c0_MinFDSubgraph);
c0_m2.refTo(c0_MinFDSubgraph);
Constraint(none(inter(union(joinRef(join(joinRef(join(joinRef(global(c0_m1)), c0_functions)), c0_deployedTo)), joinRef(join(join(joinRef(join(joinRef(global(c0_m1)), c0_connectors)), c1_deployedTo), c0_nodes))), union(joinRef(join(joinRef(join(joinRef(global(c0_m2)), c0_functions)), c0_deployedTo)), joinRef(join(join(joinRef(join(joinRef(global(c0_m2)), c0_connectors)), c1_deployedTo), c0_nodes))))));
c0_FC_DF.extending(c0_DesignFunction);
c0_FC_DF.addConstraint(equal(joinRef(join($this(), c0_deployedTo)), global(c0_FC)));
c0_FL_DF.extending(c0_DesignFunction);
c0_FL_DF.addConstraint(equal(joinRef(join($this(), c0_deployedTo)), global(c0_FL)));
c0_RC_DF.extending(c0_DesignFunction);
c0_RC_DF.addConstraint(equal(joinRef(join($this(), c0_deployedTo)), global(c0_RC)));
c0_RL_DF.extending(c0_DesignFunction);
c0_RL_DF.addConstraint(equal(joinRef(join($this(), c0_deployedTo)), global(c0_RL)));
c0_F1.extending(c0_DesignFunction);
c0_F1.addConstraint(equal(joinRef(join($this(), c0_deployedTo)), global(c0_ECU1)));
c0_F2.extending(c0_DesignFunction);
c0_F2.addConstraint($in(joinRef(join($this(), c0_deployedTo)), union(global(c0_ECU1), global(c0_ECU2))));
c0_FCtoF1.extending(c0_DFConnector);
c0_FCtoF1.addConstraint(and(equal(joinRef(join($this(), c0_source)), global(c0_FC_DF)), equal(joinRef(join($this(), c0_target)), global(c0_F1))));
c0_FLtoF1.extending(c0_DFConnector);
c0_FLtoF1.addConstraint(and(equal(joinRef(join($this(), c0_source)), global(c0_FL_DF)), equal(joinRef(join($this(), c0_target)), global(c0_F1))));
c0_RCtoF1.extending(c0_DFConnector);
c0_RCtoF1.addConstraint(and(equal(joinRef(join($this(), c0_source)), global(c0_RC_DF)), equal(joinRef(join($this(), c0_target)), global(c0_F1))));
c0_RLtoF1.extending(c0_DFConnector);
c0_RLtoF1.addConstraint(and(equal(joinRef(join($this(), c0_source)), global(c0_RL_DF)), equal(joinRef(join($this(), c0_target)), global(c0_F1))));
c0_FCtoF2.extending(c0_DFConnector);
c0_FCtoF2.addConstraint(and(equal(joinRef(join($this(), c0_source)), global(c0_FC_DF)), equal(joinRef(join($this(), c0_target)), global(c0_F2))));
c0_FLtoF2.extending(c0_DFConnector);
c0_FLtoF2.addConstraint(and(equal(joinRef(join($this(), c0_source)), global(c0_FL_DF)), equal(joinRef(join($this(), c0_target)), global(c0_F2))));
c0_RCtoF2.extending(c0_DFConnector);
c0_RCtoF2.addConstraint(and(equal(joinRef(join($this(), c0_source)), global(c0_RC_DF)), equal(joinRef(join($this(), c0_target)), global(c0_F2))));
c0_RLtoF2.extending(c0_DFConnector);
c0_RLtoF2.addConstraint(and(equal(joinRef(join($this(), c0_source)), global(c0_RL_DF)), equal(joinRef(join($this(), c0_target)), global(c0_F2))));
c0_FC_F1_RC.extending(c0_MinFDSubgraph);
c0_FC_F1_RC.addConstraint(and(equal(joinRef(join($this(), c0_functions)), union(union(global(c0_FC_DF), global(c0_F1)), global(c0_RC_DF))), equal(joinRef(join($this(), c0_connectors)), union(global(c0_FCtoF1), global(c0_RCtoF1)))));
c0_FC_F1_RL.extending(c0_MinFDSubgraph);
c0_FC_F1_RL.addConstraint(and(equal(joinRef(join($this(), c0_functions)), union(union(global(c0_FC_DF), global(c0_F1)), global(c0_RL_DF))), equal(joinRef(join($this(), c0_connectors)), union(global(c0_FCtoF1), global(c0_RLtoF1)))));
c0_FC_F2_RC.extending(c0_MinFDSubgraph);
c0_FC_F2_RC.addConstraint(and(equal(joinRef(join($this(), c0_functions)), union(union(global(c0_FC_DF), global(c0_F2)), global(c0_RC_DF))), equal(joinRef(join($this(), c0_connectors)), union(global(c0_FCtoF2), global(c0_RCtoF2)))));
c0_FC_F2_RL.extending(c0_MinFDSubgraph);
c0_FC_F2_RL.addConstraint(and(equal(joinRef(join($this(), c0_functions)), union(union(global(c0_FC_DF), global(c0_F2)), global(c0_RL_DF))), equal(joinRef(join($this(), c0_connectors)), union(global(c0_FCtoF2), global(c0_RLtoF2)))));
c0_FL_F1_RC.extending(c0_MinFDSubgraph);
c0_FL_F1_RC.addConstraint(and(equal(joinRef(join($this(), c0_functions)), union(union(global(c0_FL_DF), global(c0_F1)), global(c0_RC_DF))), equal(joinRef(join($this(), c0_connectors)), union(global(c0_FLtoF1), global(c0_RCtoF1)))));
c0_FL_F1_RL.extending(c0_MinFDSubgraph);
c0_FL_F1_RL.addConstraint(and(equal(joinRef(join($this(), c0_functions)), union(union(global(c0_FL_DF), global(c0_F1)), global(c0_RL_DF))), equal(joinRef(join($this(), c0_connectors)), union(global(c0_FLtoF1), global(c0_RLtoF1)))));
c0_FL_F2_RC.extending(c0_MinFDSubgraph);
c0_FL_F2_RC.addConstraint(and(equal(joinRef(join($this(), c0_functions)), union(union(global(c0_FL_DF), global(c0_F2)), global(c0_RC_DF))), equal(joinRef(join($this(), c0_connectors)), union(global(c0_FLtoF2), global(c0_RCtoF2)))));
c0_FL_F2_RL.extending(c0_MinFDSubgraph);
c0_FL_F2_RL.addConstraint(and(equal(joinRef(join($this(), c0_functions)), union(union(global(c0_FL_DF), global(c0_F2)), global(c0_RL_DF))), equal(joinRef(join($this(), c0_connectors)), union(global(c0_FLtoF2), global(c0_RLtoF2)))));
c0_FC.extending(c0_HWNode);
c0_FL.extending(c0_HWNode);
c0_RC.extending(c0_HWNode);
c0_RL.extending(c0_HWNode);
c0_ECU1.extending(c0_HWNode);
c0_ECU2.extending(c0_HWNode);
c0_FCtoFL.extending(c0_HWConnector);
c0_FCtoFL.addConstraint(equal(joinRef(join($this(), c0_ends)), union(global(c0_FC), global(c0_FL))));
c0_FCtoRC.extending(c0_HWConnector);
c0_FCtoRC.addConstraint(equal(joinRef(join($this(), c0_ends)), union(global(c0_FC), global(c0_RC))));
c0_FCtoRL.extending(c0_HWConnector);
c0_FCtoRL.addConstraint(equal(joinRef(join($this(), c0_ends)), union(global(c0_FC), global(c0_RL))));
c0_FCtoECU1.extending(c0_HWConnector);
c0_FCtoECU1.addConstraint(equal(joinRef(join($this(), c0_ends)), union(global(c0_FC), global(c0_ECU1))));
c0_FCtoECU2.extending(c0_HWConnector);
c0_FCtoECU2.addConstraint(equal(joinRef(join($this(), c0_ends)), union(global(c0_FC), global(c0_ECU2))));
c0_FLtoRC.extending(c0_HWConnector);
c0_FLtoRC.addConstraint(equal(joinRef(join($this(), c0_ends)), union(global(c0_FL), global(c0_RC))));
c0_FLtoRL.extending(c0_HWConnector);
c0_FLtoRL.addConstraint(equal(joinRef(join($this(), c0_ends)), union(global(c0_FL), global(c0_RL))));
c0_FLtoECU1.extending(c0_HWConnector);
c0_FLtoECU1.addConstraint(equal(joinRef(join($this(), c0_ends)), union(global(c0_FL), global(c0_ECU1))));
c0_FLtoECU2.extending(c0_HWConnector);
c0_FLtoECU2.addConstraint(equal(joinRef(join($this(), c0_ends)), union(global(c0_FL), global(c0_ECU2))));
c0_RCtoRL.extending(c0_HWConnector);
c0_RCtoRL.addConstraint(equal(joinRef(join($this(), c0_ends)), union(global(c0_RC), global(c0_RL))));
c0_RCtoECU1.extending(c0_HWConnector);
c0_RCtoECU1.addConstraint(equal(joinRef(join($this(), c0_ends)), union(global(c0_RC), global(c0_ECU1))));
c0_RCtoECU2.extending(c0_HWConnector);
c0_RCtoECU2.addConstraint(equal(joinRef(join($this(), c0_ends)), union(global(c0_RC), global(c0_ECU2))));
c0_RLtoECU1.extending(c0_HWConnector);
c0_RLtoECU1.addConstraint(equal(joinRef(join($this(), c0_ends)), union(global(c0_RL), global(c0_ECU1))));
c0_RLtoECU2.extending(c0_HWConnector);
c0_RLtoECU2.addConstraint(equal(joinRef(join($this(), c0_ends)), union(global(c0_RL), global(c0_ECU2))));
c0_ECU1toECU2.extending(c0_HWConnector);
c0_ECU1toECU2.addConstraint(equal(joinRef(join($this(), c0_ends)), union(global(c0_ECU1), global(c0_ECU2))));
